{"ast":null,"code":"var _jsxFileName = \"/home/dci/Projects/SPA/KabijRocket/src/Components/Store.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react';\nimport \"../Styles/Store.scss\"; // import AddOnButton from \"./AddOnButton\";\n\nimport RobotCounterContext from \"../Contexts/robotCounterContext.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'WATER_INCREMENT':\n      return { ...state,\n        [action.name]: state[action.name] + 1\n      };\n\n    case 'VEGETATION_INCREMENT':\n      return { ...state,\n        [action.name]: state[action.name] + 20\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst RobotCountProvider = ({\n  children\n}) => {\n  _s();\n\n  const [robotCounter, setRobotCounter] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(RobotCounterContext.Provider, {\n    value: [robotCounter, setRobotCounter],\n    children: [/*#__PURE__*/_jsxDEV(RobotGenerator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }, this);\n};\n\n_s(RobotCountProvider, \"UCH+ky/0OVbZ0x3OgDGn4rn09ck=\");\n\n_c = RobotCountProvider;\n\nconst Store = () => {\n  _s2();\n\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('WATER_INCREMENT'),\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"WATER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('VEGETATION_INCREMENT'),\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"VEGETATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}; // const Store = ({ name }) => {\n//     const [state, dispatch] = useGlobalState();\n//     return (\n//       <div>\n//         {state[name]}\n//         <button onClick={() => dispatch({ type: 'WATER_INCREMENT', name })}>+1</button>\n//         <button onClick={() => dispatch({ type: 'VEGETATION_INCREMENT', name })}>-1</button>\n//       </div>\n//     );\n//   };\n\n\n_s2(Store, \"lCuvQ9nV3fBNxlJmZItTAw1hKFs=\");\n\n_c2 = Store;\nexport default Store;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RobotCountProvider\");\n$RefreshReg$(_c2, \"Store\");","map":{"version":3,"sources":["/home/dci/Projects/SPA/KabijRocket/src/Components/Store.jsx"],"names":["React","createContext","useContext","useReducer","RobotCounterContext","initialState","count","reducer","state","action","type","name","RobotCountProvider","children","robotCounter","setRobotCounter","Store","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,OAAO,sBAAP,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAEL,SAACC,MAAM,CAACE,IAAR,GAAeH,KAAK,CAACC,MAAM,CAACE,IAAR,CAAL,GAAqB;AAF/B,OAAP;;AAIF,SAAK,sBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAEL,SAACC,MAAM,CAACE,IAAR,GAAeH,KAAK,CAACC,MAAM,CAACE,IAAR,CAAL,GAAqB;AAF/B,OAAP;;AAIF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfH;;AAkBA,MAAMI,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3C,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCZ,UAAU,CAACI,OAAD,EAAUF,YAAV,CAAjD;AACA,sBACQ,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAG,CAACS,YAAD,EAAcC,eAAd,CAAtC;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEOF,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAOD,CATD;;GAAMD,kB;;KAAAA,kB;;AAaJ,MAAMI,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBd,UAAU,CAACI,OAAD,EAAUF,YAAV,CAApC;AACA,sBACE;AAAA,eACGC,KADH,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMW,QAAQ,CAAC,iBAAD,CAA/B;AAAA,6BAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,sBAAD,CAA/B;AAAA,6BAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVD,C,CAaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAtBQD,K;;MAAAA,K;AAyBR,eAAeA,KAAf","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nimport \"../Styles/Store.scss\";\n// import AddOnButton from \"./AddOnButton\";\nimport RobotCounterContext from \"../Contexts/robotCounterContext.jsx\"\n\n\nconst initialState = {\n    count: 0,\n  };\n \nconst reducer = (state, action) => {\n    switch (action.type) {\n      case 'WATER_INCREMENT':\n        return {\n          ...state,\n          [action.name]: state[action.name] + 1,\n        };\n      case 'VEGETATION_INCREMENT':\n        return {\n          ...state,\n          [action.name]: state[action.name] + 20,\n        };\n      default:\n        return state;\n    }\n  };  \n\n\nconst RobotCountProvider = ({ children }) => {\n  const [robotCounter,setRobotCounter] = useReducer(reducer, initialState);\n  return (\n          <RobotCounterContext.Provider value ={[robotCounter,setRobotCounter]}>\n            <RobotGenerator />\n                {children}\n            </RobotCounterContext.Provider>\n\n  );\n};\n\n\n\n  const Store = () => {\n    const [count, dispatch] = useReducer(reducer, initialState);\n    return (\n      <div>\n        {count}\n        <button onClick={() => dispatch('WATER_INCREMENT')}><h2>WATER</h2></button>\n        <button onClick={() => dispatch('VEGETATION_INCREMENT')}><h2>VEGETATION</h2></button>\n       \n      </div>\n    );\n  };\n  \n\n// const Store = ({ name }) => {\n//     const [state, dispatch] = useGlobalState();\n//     return (\n//       <div>\n//         {state[name]}\n//         <button onClick={() => dispatch({ type: 'WATER_INCREMENT', name })}>+1</button>\n//         <button onClick={() => dispatch({ type: 'VEGETATION_INCREMENT', name })}>-1</button>\n//       </div>\n//     );\n//   };\n  \n\nexport default Store;"]},"metadata":{},"sourceType":"module"}