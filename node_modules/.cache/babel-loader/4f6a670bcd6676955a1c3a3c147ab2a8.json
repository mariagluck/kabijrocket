{"ast":null,"code":"var _jsxFileName = \"/home/dci/Projects/SPA/KabijRocket/src/Components/AddOnButton.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'WATER_INCREMENT':\n      return {\n        count: state.count + 1\n      };\n\n    case 'VEGETATION_INCREMENT':\n      return {\n        count: state.count + 20\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst incrementWater = () => ({\n  type: \"WATER_INCREMENT\"\n});\n\nconst incrementVegetation = () => ({\n  type: \"VEGETATION_INCREMENT\"\n});\n\nconst actions = dispatch => ({\n  increaseWater: () => dispatch(incrementWater()),\n  increaseVegetation: () => dispatch(increaseVegetation())\n});\n\nconst AddOnContext = /*#__PURE__*/React.createContext(initialState);\nexport const AddOnContextProvider = props => {\n  _s();\n\n  const [reducerState, dispatch] = React.useReducer(reducer, initialState);\n  const reducerActions = actions(dispatch);\n  const context = {\n    state: { ...reducerState\n    },\n    actions: { ...reducerActions\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ContainerContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddOnContextProvider, \"W45WhoqaeHmtnn/8MjMaRErU678=\");\n\n_c = AddOnContextProvider;\n\nconst AddOnButton = () => {\n  _s2();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Count: \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'WATER_INCREMENT'\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"WATER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 69\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'VEGETATION_INCREMENT'\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"VEGETATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 74\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(AddOnButton, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c2 = AddOnButton;\nexport const useContainerContext = () => {\n  _s3();\n\n  return React.useContext(AddOnContext);\n};\n\n_s3(useContainerContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddOnContextProvider\");\n$RefreshReg$(_c2, \"AddOnButton\");","map":{"version":3,"sources":["/home/dci/Projects/SPA/KabijRocket/src/Components/AddOnButton.jsx"],"names":["React","createContext","useContext","useReducer","initialState","count","reducer","state","action","type","incrementWater","incrementVegetation","actions","dispatch","increaseWater","increaseVegetation","AddOnContext","AddOnContextProvider","props","reducerState","reducerActions","context","children","AddOnButton","useContainerContext"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAO;AACHJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADlB,OAAP;;AAKF,SAAK,sBAAL;AACE,aAAO;AACNA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADf,OAAP;;AAGF;AACE,aAAOE,KAAP;AAZJ;AAcD,CAfH;;AAmBE,MAAMG,cAAc,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAE;AAAR,CAAP,CAAvB;;AACA,MAAME,mBAAmB,GAAG,OAAO;AAAEF,EAAAA,IAAI,EAAE;AAAR,CAAP,CAA5B;;AAEA,MAAMG,OAAO,GAAGC,QAAQ,KAAK;AAC3BC,EAAAA,aAAa,EAAE,MAAMD,QAAQ,CAACH,cAAc,EAAf,CADF;AAE3BK,EAAAA,kBAAkB,EAAE,MAAMF,QAAQ,CAACE,kBAAkB,EAAnB;AAFP,CAAL,CAAxB;;AAKA,MAAMC,YAAY,gBAAGhB,KAAK,CAACC,aAAN,CAAoBG,YAApB,CAArB;AAEA,OAAO,MAAMa,oBAAoB,GAAGC,KAAK,IAAI;AAAA;;AAC3C,QAAM,CAACC,YAAD,EAAeN,QAAf,IAA2Bb,KAAK,CAACG,UAAN,CAAiBG,OAAjB,EAA0BF,YAA1B,CAAjC;AACA,QAAMgB,cAAc,GAAGR,OAAO,CAACC,QAAD,CAA9B;AACA,QAAMQ,OAAO,GAAG;AACdd,IAAAA,KAAK,EAAE,EAAE,GAAGY;AAAL,KADO;AAEdP,IAAAA,OAAO,EAAE,EAAE,GAAGQ;AAAL;AAFK,GAAhB;AAKA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEC,OAAlC;AAAA,cACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC,CAbI;;GAAML,oB;;KAAAA,oB;;AAgBb,MAAMM,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAAChB,KAAD,EAAQM,QAAR,IAAoBV,UAAU,CAACG,OAAD,EAAUF,YAAV,CAApC;AACA,sBACE;AAAA,4BACG;AAAA,6BAAaG,KAAK,CAACF,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE;AAAP,OAAD,CAA/B;AAAA,6BAA4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMI,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE;AAAP,OAAD,CAA/B;AAAA,6BAAiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjE;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVD;;IAAMc,W;;MAAAA,W;AAaN,OAAO,MAAMC,mBAAmB,GAAG;AAAA;;AAAA,SAAMxB,KAAK,CAACE,UAAN,CAAiBc,YAAjB,CAAN;AAAA,CAA5B;;IAAMQ,mB","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\n\nconst initialState = {\n    count: 0,\n  };\n \nconst reducer = (state, action) => {\n    switch (action.type) {\n      case 'WATER_INCREMENT':\n        return {\n            count: state.count + 1\n        };\n \n\n      case 'VEGETATION_INCREMENT':\n        return {\n         count: state.count + 20\n        };\n      default:\n        return state;\n    }\n  };  \n\n\n\n  const incrementWater = () => ({ type: \"WATER_INCREMENT\" });\n  const incrementVegetation = () => ({ type: \"VEGETATION_INCREMENT\" });\n  \n  const actions = dispatch => ({\n    increaseWater: () => dispatch(incrementWater()),\n    increaseVegetation: () => dispatch(increaseVegetation())\n  });\n\n  const AddOnContext = React.createContext(initialState);\n\n  export const AddOnContextProvider = props => {\n    const [reducerState, dispatch] = React.useReducer(reducer, initialState);\n    const reducerActions = actions(dispatch);\n    const context = {\n      state: { ...reducerState },\n      actions: { ...reducerActions }\n    };\n\n    return (\n        <ContainerContext.Provider value={context}>\n          {props.children}\n        </ContainerContext.Provider>\n      );\n    };\n    \n\n  const AddOnButton = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n      <div>\n         <h1> Count: {state.count}</h1>\n        <button onClick={() => dispatch({type: 'WATER_INCREMENT'})}><h2>WATER</h2></button>\n        <button onClick={() => dispatch({type: 'VEGETATION_INCREMENT'})}><h2>VEGETATION</h2></button>\n       \n      </div>\n    );\n  };\n  \n\n  export const useContainerContext = () => React.useContext(AddOnContext);\n"]},"metadata":{},"sourceType":"module"}