{"ast":null,"code":"var _jsxFileName = \"/home/dci/Projects/SPA/KabijRocket/src/Components/AddOnButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react';\nimport robotCounterContext from '../Contexts/robotCounterContext.jsx';\nimport RobotCounterContext from \"../Contexts/robotCounterContext.jsx\";\nimport RobotPerSecondContext from \"../Contexts/robotPerSecondContext.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddOnButton() {\n  _s();\n\n  const [robotCounter, setRobotCounter] = useContext(RobotCounterContext);\n  const [rpsCounter, setRpsCounter] = useContext(RobotPerSecondContext); //  rpsCounter = rpsCounter + amount *robotspersecond\n\n  const initialState = {\n    water: {\n      count: 0\n    },\n    veg: {\n      count: 0\n    }\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'WATER_INCREMENT':\n        const test = { ...state,\n          water: {\n            count: state.water.count + 1\n          }\n        };\n\n      case 'VEGETATION_INCREMENT':\n        return { ...state,\n          veg: {\n            count: state.veg.count + 1\n          }\n        };\n\n      case 'HOUSING_INCREMENT':\n        return {\n          count: state.count + 20\n        };\n\n      case 'DINOS_INCREMENT':\n        return {\n          count: state.count + 20\n        };\n\n      case 'ENERGY_INCREMENT':\n        return {\n          count: state.count + 20\n        };\n\n      case 'FACTORY_INCREMENT':\n        return {\n          count: state.count + 20\n        };\n\n      case 'FARMING_INCREMENT':\n        return {\n          count: state.count + 20\n        };\n\n      case 'MINING_INCREMENT':\n        return {\n          count: state.count + 20\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'WATER_INCREMENT'\n      }),\n      className: \"water btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"WATER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 91\n      }, this), state.water.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'VEGETATION_INCREMENT'\n      }),\n      className: \"veg btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"VEGETATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 94\n      }, this), state.veg.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'HOUSING_INCREMENT'\n      }),\n      className: \"housing btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"HOUSING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 95\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'DINOS_INCREMENT'\n      }),\n      className: \"dinos btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"DINOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 91\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'ENERGY_INCREMENT'\n      }),\n      className: \"energy btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ENERGY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 93\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'FACTORY_INCREMENT'\n      }),\n      className: \"factory btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"FACTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 95\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'FARMING_INCREMENT'\n      }),\n      className: \"farm btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"FARMING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 92\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'MINING_INCREMENT'\n      }),\n      className: \"mine btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"MINING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 91\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AddOnButton, \"eWk7vFwht31Cz21Su1PgATjqR44=\");\n\n_c = AddOnButton;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOnButton\");","map":{"version":3,"sources":["/home/dci/Projects/SPA/KabijRocket/src/Components/AddOnButton.jsx"],"names":["React","createContext","useContext","useReducer","robotCounterContext","RobotCounterContext","RobotPerSecondContext","AddOnButton","robotCounter","setRobotCounter","rpsCounter","setRpsCounter","initialState","water","count","veg","reducer","state","action","type","test","dispatch"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nimport robotCounterContext from '../Contexts/robotCounterContext.jsx';\nimport RobotCounterContext from \"../Contexts/robotCounterContext.jsx\";\nimport RobotPerSecondContext from \"../Contexts/robotPerSecondContext.jsx\";\n\n\n\nexport default  function AddOnButton() {\n    const [ robotCounter, setRobotCounter ] = useContext(RobotCounterContext);\n    const [ rpsCounter, setRpsCounter ] = useContext(RobotPerSecondContext);\n    \n    //  rpsCounter = rpsCounter + amount *robotspersecond\n    const initialState = {\n\n        water: {\n           count:0, \n        },\n        veg: {\n            count:0,\n         },\n       };\n      \n     const reducer = (state, action) => {\n         switch (action.type) {\n           case 'WATER_INCREMENT':\n            const test = {\n                 ...state,\n                water: {\n                count: state.water.count + 1\n               }\n             };\n      \n     \n           case 'VEGETATION_INCREMENT':\n             return {\n                ...state,\n                veg: {\n                    count: state.veg.count + 1\n                   }\n             };\n           \n        \n\n           case 'HOUSING_INCREMENT':\n               return {\n                count: state.count + 20\n            };\n\n\n           case 'DINOS_INCREMENT':\n           return {\n            count: state.count + 20\n           };\n              \n           \n  \n           case 'ENERGY_INCREMENT':\n               return {\n                count: state.count + 20\n               };\n            \n           \n  \n           case 'FACTORY_INCREMENT':\n               return {\n                count: state.count + 20\n               };\n             \n           \n  \n           case 'FARMING_INCREMENT':\n               return {\n                count: state.count + 20\n               };\n           \n           \n  \n           case 'MINING_INCREMENT':\n               return {\n                count: state.count + 20\n               };\n             default:\n             return state;\n        }\n       };  \n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n      <div>\n        \n        <button onClick={() => dispatch({type: 'WATER_INCREMENT'})} className=\"water btn\"><h2>WATER</h2>{state.water.count}</button>\n        <button onClick={() => dispatch({type: 'VEGETATION_INCREMENT'})} className=\"veg btn\"><h2>VEGETATION</h2>{state.veg.count}</button>\n        <button onClick={() => dispatch({type: 'HOUSING_INCREMENT'})} className=\"housing btn\"><h2>HOUSING</h2></button>\n        <button onClick={() => dispatch({type: 'DINOS_INCREMENT'})} className=\"dinos btn\"><h2>DINOS</h2></button>\n        <button onClick={() => dispatch({type: 'ENERGY_INCREMENT'})} className=\"energy btn\"><h2>ENERGY</h2></button>\n        <button onClick={() => dispatch({type: 'FACTORY_INCREMENT'})} className=\"factory btn\"><h2>FACTORY</h2></button>\n        <button onClick={() => dispatch({type: 'FARMING_INCREMENT'})} className=\"farm btn\"><h2>FARMING</h2></button>\n        <button onClick={() => dispatch({type: 'MINING_INCREMENT'})} className=\"mine btn\"><h2>MINING</h2></button>\n       \n      </div>\n    );\n  };\n  \n\n"]},"metadata":{},"sourceType":"module"}